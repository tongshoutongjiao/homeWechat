<template>
  <view class="topContainer">
    <view class="firstView">
      <view class="leftNameView"><text style="color: rgb(53,141,255)">王二麻</text>名下所有学校统计</view>
      <view class="rightFilterView" catchtap="filter">
        <view class="filterWord">筛选</view>
        <image class="filterImg" src="/images/filterPic.png"></image>
      </view>
    </view>
    <view class="middleView">
      <view class="dayType {{currentDateType==0 ? 'dayTypeActive' : ''}}" data-index="0" catchtap="swichDate">
        按日
        <view class="borderBtm" wx:if="{{currentDateType==0}}"></view>
      </view>
      <view class="dayType {{currentDateType==1 ? 'dayTypeActive' : ''}}" data-index="1" catchtap="swichDate">
        按月
        <view class="borderBtm" wx:if="{{currentDateType==1}}"></view>
      </view>
      <view class="dayType {{currentDateType==2 ? 'dayTypeActive' : ''}}"  data-index="2" catchtap="swichDate">
        按季
        <view class="borderBtm" wx:if="{{currentDateType==2}}"></view>
      </view>
      <view wx:if="{{currentDateType==0}}" class="dateTime">
        <picker mode="date" value="{{selectDate}}" start="2015-09-01" end="{{initDate}}" bindchange="bindDateChange">
          <view class="picker">
            {{selectDate}}
          </view>
        </picker>
      </view>
      <view wx:if="{{currentDateType==1}}" class="dateTime">
        <picker mode="date" fields="month" bindchange="bindMonthChange" value="{{monthInit}}" start="2015-09" end="{{monthEndTime}}">
          <view class="picker">
            {{monthInit}}
          </view>
        </picker>
      </view>
      <view wx:if="{{currentDateType==2}}" class="dateTime">
        <picker bindchange="bindQuarterChange" value="{{quarterIndex}}" range="{{quarterArr}}">
          <view class="picker">
            {{quarterText}}
            <!--{{weekIndex}}-->
            <!--{{pickerWeekArr[weekIndex]}}-->
          </view>
        </picker>
      </view>
    </view>
    <view class="lastView">
      <view class="achievement {{currentTab==0 ? 'active' : ''}}" data-id="0" catchtap="swichTab">人员业绩</view>
      <view class="achievement {{currentTab==1 ? 'active' : ''}}" data-id="1" catchtap="swichTab">学校业绩</view>
      <view class="achievement {{currentTab==2 ? 'active' : ''}}" data-id="2" catchtap="swichTab">APP业绩</view>
      <view class="achievement {{currentTab==3 ? 'active' : ''}}" data-id="3" catchtap="swichTab">设备业绩</view>
    </view>
  </view>
  <view class="tab1">
    <view class="container">
      <view class="title">
        {{chartTitle}}
      </view>
      <canvas canvas-id="columnCanvas" class="canvas"></canvas>
    </view>
    <view class="container">
      <view class="title">
        {{buyCardPeoNum}}
      </view>
      <canvas canvas-id="columnCanvas1" class="canvas"></canvas>
    </view>
    <view class="container">
      <view class="title">
        {{buyCardNum}}
      </view>
      <canvas canvas-id="columnCanvas2" class="canvas"></canvas>
    </view>
    <view class="container">
      <view class="title">
        日订购人数走势图
      </view>
      <canvas canvas-id="lineCanvas" disable-scroll="true" class="canvas" bindtouchstart="touchHandler" bindtouchmove="moveHandler" bindtouchend="touchEndHandler"></canvas>
    </view>
    <view class="container">
      <view class="title">
        日净增数量走势图
      </view>
      <canvas canvas-id="lineCanvas2" disable-scroll="true" class="canvas" bindtouchstart="touchHandler2" bindtouchmove="moveHandler2" bindtouchend="touchEndHandler2"></canvas>
    </view>
    <view class="container">
      <view class="title">
        日新增数量走势图
      </view>
      <canvas canvas-id="lineCanvas3" disable-scroll="true" class="canvas" bindtouchstart="touchHandler3" bindtouchmove="moveHandler3" bindtouchend="touchEndHandler3"></canvas>
    </view>
    <view class="container lastLineContainer">
      <view class="title">
        日流失数量走势图
      </view>
      <canvas canvas-id="lineCanvas4" disable-scroll="true" class="canvas" bindtouchstart="touchHandler4" bindtouchmove="moveHandler4" bindtouchend="touchEndHandler4"></canvas>
    </view>
  </view>
  <view class="animation" animation="{{animationData}}" style="height:100%;position:fixed;visibility:{{show ? 'visible':'hidden'}}">
    <view class="animation-content">
      22222222
      <view class="botmButton">
        <view class="cancel" catchtap="cancelBton">取消</view>
        <view class="sure" catchtap="sureBton">确认</view>
      </view>
    </view>
  </view>
</template>
<script>
    import wepy from 'wepy'
    import api from '../api.js'
    import util from '../utils/util'
    import wxCharts from '../utils/wxcharts'
    let lineChart = null
    let lineChart2 = null
    let lineChart3 = null
    let lineChart4 = null
    export default class Index extends wepy.page {
      config = {
        navigationBarTitleText: '我的业绩'
      }
      data = {
        animation: '',
        nimationData: '',
        show: false,
        quarterIndex: 0,
        quarterText: '2016年第季',
        monthInit: '2017-5',
        monthEndTime: '0',
        selectDate: '0',
        initDate: '2018-02-05',
        currentDateType: 0,
        currentTab: 0,
        deviceH: 0,
        windowWidth: 375,
        chartTitle: '持卡情况',
        buyCardPeoNum: '套餐订购人数',
        buyCardNum: '套餐订购数量',
        isMainChartDisplay: true,
        data1: [15, 20, 45, 37],
        // categories1: ['学生总数', '持卡总数', '订购人数', '订购数量'],
        data2: [15, 50, 45, 37],
        categories2: ['3元套餐', '5元套餐', '7元套餐', '10元套餐'],
        data3: [30, 20, 75, 25],
        categories3: ['3元套餐', '5元套餐', '7元套餐', '10元套餐'],
        quarterArr: ['2016年第一季@2016-3-31', '2016年第二季@2016-6-30', '2016年第三季@2016-9-30', '2016年第四季@2016-12-31', '2017年第一季@2017-3-31', '2017年第二季@2017-6-30', '2017年第三季@2017-9-30', '2017年第四季@2017-12-31', '2018年第一季@2018-3-31', '2018年第二季@2018-6-30', '2018年第三季@2018-9-30', '2018年第四季@2018-12-31']
      }
      onLoad (options) {
        // 页面初始化 options为页面跳转所带来的参数
        let getBeforDay = util.getBeforDay(new Date())
        this.initDate = util.getBeforDay(new Date())
        this.selectDate = util.getBeforDay(new Date())
        this.monthInit = util.getCurrentMonth(new Date())
        this.monthEndTime = util.getCurrentMonth(new Date())
        let quarterTextSplit = this.quarterArr[0].split('@')
        this.quarterText = quarterTextSplit[0]
      }
      onReady () {
        // 页面渲染完成
        this.getDeviceInfo()
        this.graphShow()
      }
      getDeviceInfo () {
        let that = this
        wx.getSystemInfo({
          success: function (res) {
            that.setData({
              windowWidth: res.windowWidth,
              deviceH: res.windowHeight
            })
          }
        })
      }
      graphShow () {
        let that = this
        switch (this.data.currentTab) {
          case 0:
            that.lineChartShow()
            that.lineChart2Show()
            that.lineChart3Show()
            that.lineChart4Show()
            that.columnChartShow()
            that.column2ChartShow()
            that.column3ChartShow()
            break
          case 1:
            that.lineChart2Show()
            break
          case 2:
            that.lineChart3Show()
            break
          case 3:
            that.lineChart4Show()
            break
        }
      }
      createSimulationData () {
        let categories = []
        let data = []
        for (let i = 0; i < 31; i++) {
          categories.push('12-' + (i + 1))
          data.push(Math.random() * (20 - 10) + 10)
        }
        return {
          categories: categories,
          data: data
        }
      }
      lineChartShow () {
        let simulationData = this.createSimulationData()
        let lineChartParams = {
          canvasId: 'lineCanvas',
          type: 'line',
          categories: simulationData.categories,
          animation: false,
          series: [{
            name: '人数',
            data: simulationData.data,
            format: function (val, name) {
              return val.toFixed(2)
            }
          }],
          xAxis: {
            disableGrid: true
          },
          yAxis: {
            // title: '成交金额',
            format: function (val) {
              return val.toFixed(2)
            },
            min: 0
          },
          width: this.windowWidth,
          height: 200,
          dataLabel: true,
          dataPointShape: true,
          enableScroll: true,
          extra: {
            lineStyle: 'curve'
          }
        }
        lineChart = new wxCharts(lineChartParams)
      }
      lineChart2Show () {
        let simulationData = this.createSimulationData()
        let lineChart2Params = {
          canvasId: 'lineCanvas2',
          type: 'line',
          categories: simulationData.categories,
          animation: false,
          series: [{
            name: '人数',
            data: simulationData.data,
            format: function (val, name) {
              return val.toFixed(2)
            }
          }],
          xAxis: {
            disableGrid: true
          },
          yAxis: {
            // title: '成交金额',
            format: function (val) {
              return val.toFixed(2)
            },
            min: 0
          },
          width: this.windowWidth,
          height: 200,
          dataLabel: true,
          dataPointShape: true,
          enableScroll: true,
          extra: {
            lineStyle: 'curve'
          }
        }
        lineChart2 = new wxCharts(lineChart2Params)
      }
      lineChart3Show () {
        let simulationData = this.createSimulationData()
        let lineChart3Params = {
          canvasId: 'lineCanvas3',
          type: 'line',
          categories: simulationData.categories,
          animation: false,
          series: [{
            name: '人数',
            data: simulationData.data,
            format: function (val, name) {
              return val.toFixed(2)
            }
          }],
          xAxis: {
            disableGrid: true
          },
          yAxis: {
            // title: '成交金额',
            format: function (val) {
              return val.toFixed(2)
            },
            min: 0
          },
          width: this.windowWidth,
          height: 200,
          dataLabel: true,
          dataPointShape: true,
          enableScroll: true,
          extra: {
            lineStyle: 'curve'
          }
        }
        lineChart3 = new wxCharts(lineChart3Params)
      }
      lineChart4Show () {
        let simulationData = this.createSimulationData()
        let lineChart4Params = {
          canvasId: 'lineCanvas4',
          type: 'line',
          categories: simulationData.categories,
          animation: false,
          series: [{
            name: '人数',
            data: simulationData.data,
            format: function (val, name) {
              return val.toFixed(2)
            }
          }],
          xAxis: {
            disableGrid: true
          },
          yAxis: {
            // title: '成交金额',
            format: function (val) {
              return val.toFixed(2)
            },
            min: 0
          },
          width: this.windowWidth,
          height: 200,
          dataLabel: true,
          dataPointShape: true,
          enableScroll: true,
          extra: {
            lineStyle: 'curve'
          }
        }
        lineChart4 = new wxCharts(lineChart4Params)
      }
      columnChartShow () {
        let columnChartParams = {
          canvasId: 'columnCanvas',
          type: 'column',
          animation: true,
          categories: ['学生总数', '持卡总数', '订购人数', '订购数量'],
          series: [{
            name: '数量',
            data: this.data1,
            format: function (val, name) {
              return val.toFixed(2)
            }
          }],
          yAxis: {
            format: function (val) {
              return val
            },
            min: 0
          },
          xAxis: {
            disableGrid: false,
            type: 'calibration',
            fontSize: 15
          },
          extra: {
            column: {
              width: 22
            }
          },
          width: this.windowWidth,
          height: 200
        }
        new wxCharts(columnChartParams)
      }
      column2ChartShow () {
        let column2ChartParams = {
          canvasId: 'columnCanvas1',
          type: 'column',
          animation: true,
          categories: ['学生总数', '持卡总数', '订购人数', '订购数量'],
          series: [{
            name: '数量',
            data: this.data1,
            format: function (val, name) {
              return val.toFixed(2)
            }
          }],
          yAxis: {
            format: function (val) {
              return val
            },
            min: 0
          },
          xAxis: {
            disableGrid: false,
            type: 'calibration',
            fontSize: 15
          },
          extra: {
            column: {
              width: 22
            }
          },
          width: this.windowWidth,
          height: 200
        }
        new wxCharts(column2ChartParams)
      }
      column3ChartShow () {
        let column3ChartParams = {
          canvasId: 'columnCanvas2',
          type: 'column',
          animation: true,
          categories: ['学生总数', '持卡总数', '订购人数', '订购数量'],
          series: [{
            name: '数量',
            data: this.data1,
            format: function (val, name) {
              return val.toFixed(2)
            }
          }],
          yAxis: {
            format: function (val) {
              return val
            },
            min: 0
          },
          xAxis: {
            disableGrid: false,
            type: 'calibration',
            fontSize: 15
          },
          extra: {
            column: {
              width: 22
            }
          },
          width: this.windowWidth,
          height: 200
        }
        new wxCharts(column3ChartParams)
      }
      methods = {
        touchHandler (e) {
          lineChart.scrollStart(e)
        },
        moveHandler (e) {
          lineChart.scroll(e)
        },
        touchEndHandler (e) {
          lineChart.scrollEnd(e)
          lineChart.showToolTip(e, {
            format: function (item, category) {
              return category + ' ' + item.name + ':' + item.data
            }
          })
        },
        touchHandler2 (e) {
          lineChart2.scrollStart(e)
        },
        moveHandler2(e) {
          lineChart2.scroll(e)
        },
        touchEndHandler2 (e) {
          lineChart2.scrollEnd(e)
          lineChart2.showToolTip(e, {
            format: function (item, category) {
              return category + ' ' + item.name + ':' + item.data
            }
          })
        },
        touchHandler3 (e) {
          console.log(e)
          lineChart3.scrollStart(e)
        },
        moveHandler3 (e) {
          lineChart3.scroll(e)
        },
        touchEndHandler3 (e) {
          lineChart3.scrollEnd(e)
          lineChart3.showToolTip(e, {
            format: function (item, category) {
              return category + ' ' + item.name + ':' + item.data
            }
          })
        },
        touchHandler4 (e) {
          lineChart4.scrollStart(e)
        },
        moveHandler4 (e) {
          lineChart4.scroll(e)
        },
        touchEndHandler4 (e) {
          lineChart4.scrollEnd(e)
          lineChart4.showToolTip(e, {
            format: function (item, category) {
              return category + ' ' + item.name + ':' + item.data
            }
          })
        },
        swichTab (e) {
          if (this.currentTab === e.target.dataset.id) {
            return false
          } else {
            this.currentTab = e.target.dataset.id
          }
        },
        swichDate (e) {
          if (this.currentDateType === e.target.dataset.index) {
            return false
          } else {
            this.currentDateType = e.target.dataset.index
          }
        },
        bindDateChange (e) {
          this.selectDate = e.detail.value
        },
        bindMonthChange (e) {
          this.monthInit = e.detail.value
          let time = util.getCurrentMonth(new Date())
          // 如果当前月份等于被选的月份，那么传给后台的日期就是当前日期的前一天日期
          if (this.monthInit === time) {
            // params.logdate = util.getBeforDay(new Date())
          } else {
            // let splitMonth = this.monthInit.split('-')
            // if (splitMonth[1] == '01' || splitMonth[1] == '03' || splitMonth[1] == '05' || splitMonth[1] == '07' || splitMonth[1] == '08' || splitMonth[1] == '10' || splitMonth[1] == '12') {
            //   params.logdate = this.monthInit + '-31'
            // } else if (splitMonth[1] == '04' || splitMonth[1] == '06' || splitMonth[1] == '09' || splitMonth[1] == '11') {
            //   params.logdate = this.monthInit + '-30'
            // } else if (splitMonth[1] == '02') {
            //   if ((splitMonth[0] % 4 == 0) && (splitMonth[0] % 100 != 0 || splitMonth[0] % 400 == 0)) {
            //     params.logdate = this.monthInit + '-29'
            //   } else {
            //     params.logdate = this.monthInit + '-28'
            //   }
            // }
          }
        },
        bindQuarterChange (e) {
          console.log(e)
          this.quarterIndex = e.detail.value
          let splitQuarter = this.quarterArr[e.detail.value].split('@')
          this.quarterText = splitQuarter[0]
        },
        filter(e) {
          console.log(e)
          // 点击筛选事件
          // if (this.userType == '4' || this.userType == '5') { return }
          let animation = wepy.createAnimation({// 创建动画
            duration: 1000,
            timingFunction: 'ease',
            width: 300,
            height: 800,
            top: 0,
            bottom: 0,
            right: 0,
            backgroundColor: '#fff',
            opcity: 1,
            zIndex: 999
          })
          this.animation = animation
          animation.translateX(-100 + 'vh').step()
          this.nimationData = animation.export()
          this.show = true
        },
        cancelBton () {
          this.show = false
        }
      }
    }
</script>

<style scoped>
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    -webkit-text-size-adjust:none;
    -webkit-user-select: none;
    font-size: 35rpx;
    border-bottom: 4rpx solid rgb(230,230,230);
    margin-bottom: 40rpx;
    color: #333;
    font-family: Helvetica,Arial,"Helvetica Neue","Droid Sans","Microsoft YaHei",sans-serif;
  }
  .canvas {
    width: 100%;
    height: 200px;
  }
  .title {
    text-align: left;
    position: relative;
    margin-top: 20rpx;
    margin-bottom: 30rpx;
    font-size: 30rpx;
    margin-left: 30rpx;
    color: rgb(53,141,255);
  }
  .lastLineContainer{
    border-bottom: none;
  }
  .topContainer{
    padding: 30rpx 30rpx 40rpx 30rpx;
    border-bottom: 4rpx solid rgb(230,230,230);
  }
  .firstView {
    display:flex;
    align-items:center;
    justify-content:space-between;
    margin-bottom:40rpx;
  }
  .filterImg{
    width: 28rpx;
    height: 28rpx;
  }
  .rightFilterView{
    width: 15%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .middleView {
    margin-bottom:30rpx;
    height: 52rpx;
  }
  .lastView, .middleView{
    display: flex;
    justify-content: space-between;
  }
  .leftNameView,.filterWord,.middleView,.lastView{
    font-size: 32rpx;
  }
  .lastView{
    height: 64rpx;
  }
  .leftNameView{
    color: rgb(24,24,24);
    letter-spacing: 5rpx;
  }
  .filterWord {
    color: rgb(87,87,89);
  }
  .dateTime{
    border-left: 4rpx solid rgb(208,208,212);
    padding-left: 34rpx;
    color: rgb(240,22,109);
  }
  .achievement{
    display: flex;
    width: 25%;
    height: 100%;
    color: rgb(142,142,147);
    align-items: center;
    justify-content: center;
  }
  .active{
    color: rgb(255,255,255);
    background: rgb(52,140,255);
  }
  .borderBtm {
    width: 20rpx;
    border: 1rpx solid #348cff;
    margin-top:16rpx;
    margin-left:25%;
  }
  .dayType{
    color: rgb(142,142,147);
  }
  .dayTypeActive{
    color: rgb(24,24,24);
  }
  .animation{
    background: rgba(0,0,0,0.2);
    z-index: 999;
    float: left;
    right: -100vh;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }
  .animation-content{
    width: 83%;
    height: 100%;
    background: #fff;
    position: absolute;
    right: 0;
    overflow-y:auto;
  }
  .botmButton{
    display: flex;
    justify-content: space-around;
    height: 80rpx;
    position: fixed;
    bottom: 0;
    width:83%;
  }
  .botmButton view{
    width:50%;
    height:100%;
    text-align:center;
    line-height:3;
    font-size: 30rpx;
    color: rgb(255,255,255);
  }
  .cancel{
    background:rgb(208,208,212);
  }
  .sure{
    background:rgb(52,140,255);
  }
</style>
