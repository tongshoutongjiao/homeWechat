<style lang="less">
    .hide {
        display: none;
    }

    /*清除icon*/
    .login-close {
        position: absolute;
        right: 40rpx;
        top: 26rpx;
        width: 32rpx;
        height: 32rpx;
        z-index: 10;
    }

</style>

<script>
	import wepy from 'wepy'
	import 'wepy-async-function'


	export default class extends wepy.app {
		config = {
			pages: [
				// 'pages/forgetPassword',
				'pages/login',
				'pages/main',
				'pages/search',
				'pages/businessOpen',
				'pages/schoolList',
				'pages/schoolDetail',
				'pages/performance',
				'pages/takePhoto',
				'pages/schools',
				'pages/schoolAlbum',
				'pages/studentManage',
				'pages/searchStudent',
				'pages/addStudent',
				'pages/editStuInfo'
			],
			window: {
				backgroundTextStyle: 'light',
				navigationBarBackgroundColor: '#FFF',
				navigationBarTitleText: 'WeChat',
				navigationBarTextStyle: 'black'
			},
			networkTimeout: {
				request: 100000,
				downloadFile: 100000
			}
		}

		globalData = {
			userInfo: null,
		}

		constructor () {
			super()
			this.use('requestfix')
			this.use('promisify')

		}

		onLaunch() {
			this.checkUpdate();
		}

		sleep (s) {
			return new Promise((resolve, reject) => {
				setTimeout(() => {
					resolve('promise resolved')
				}, s * 1000)
			})
		}

		checkUpdate() {
			try{
				const updateManager = wx.getUpdateManager();
				updateManager.onCheckForUpdate(function (res) {
					// 请求完新版本信息的回调
					console.log(res.hasUpdate)
					if(res.hasUpdate){
						wx.showToast({
							title: '发现有新版本 请等待..',
						});
					}
				});

				updateManager.onUpdateReady(function () {
					wx.showModal({
						title: '更新提示',
						content: '新版本已经准备好，是否重启应用？',
						success: function (res) {
							if (res.confirm) {
								// 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
								updateManager.applyUpdate()
							}
						}
					})
				});

				updateManager.onUpdateFailed(function () {
					wx.showToast({
						title: '下载失败 重新启动',
					})
				});
			} catch(e) {
				console.log(e);
			}
		}

		async testAsync () {
			const data = await this.sleep(3)
			console.log(data)
		}
		getUserInfo(cb) {
			const that = this
			if (this.globalData.userInfo) {
				return this.globalData.userInfo
			}
			wepy.getUserInfo({
				success (res) {
					that.globalData.userInfo = res.userInfo
					cb && cb(res.userInfo)
				}
			})
		}
	}
</script>
